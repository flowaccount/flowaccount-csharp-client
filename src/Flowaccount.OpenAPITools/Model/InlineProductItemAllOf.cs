/* 
 * FlowAccount Open API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2-oas3
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Flowaccount.OpenAPITools.Client.OpenAPIDateConverter;

namespace Flowaccount.OpenAPITools.Model
{
    /// <summary>
    /// InlineProductItemAllOf
    /// </summary>
    [DataContract]
    public partial class InlineProductItemAllOf :  IEquatable<InlineProductItemAllOf>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InlineProductItemAllOf" /> class.
        /// </summary>
        /// <param name="discountAmountPercentage">ส่วนลดสินค้า (%) (default to 0).</param>
        /// <param name="discountAmount">ส่วนลดสินค้า (default to 0M).</param>
        /// <param name="vatRate">ภาษี: 7 &#x3D; 7% / 0 &#x3D; 0% / -1 &#x3D; ยกเว้นภาษี (default to 7).</param>
        public InlineProductItemAllOf(int discountAmountPercentage = 0, decimal discountAmount = 0M, int vatRate = 7)
        {
            // use default value if no "discountAmountPercentage" provided
            if (discountAmountPercentage == null)
            {
                this.DiscountAmountPercentage = 0;
            }
            else
            {
                this.DiscountAmountPercentage = discountAmountPercentage;
            }
            // use default value if no "discountAmount" provided
            if (discountAmount == null)
            {
                this.DiscountAmount = 0M;
            }
            else
            {
                this.DiscountAmount = discountAmount;
            }
            // use default value if no "vatRate" provided
            if (vatRate == null)
            {
                this.VatRate = 7;
            }
            else
            {
                this.VatRate = vatRate;
            }
        }
        
        /// <summary>
        /// ส่วนลดสินค้า (%)
        /// </summary>
        /// <value>ส่วนลดสินค้า (%)</value>
        [DataMember(Name="discountAmountPercentage", EmitDefaultValue=true)]
        public int DiscountAmountPercentage { get; set; }

        /// <summary>
        /// ส่วนลดสินค้า
        /// </summary>
        /// <value>ส่วนลดสินค้า</value>
        [DataMember(Name="discountAmount", EmitDefaultValue=true)]
        public decimal DiscountAmount { get; set; }

        /// <summary>
        /// ภาษี: 7 &#x3D; 7% / 0 &#x3D; 0% / -1 &#x3D; ยกเว้นภาษี
        /// </summary>
        /// <value>ภาษี: 7 &#x3D; 7% / 0 &#x3D; 0% / -1 &#x3D; ยกเว้นภาษี</value>
        [DataMember(Name="vatRate", EmitDefaultValue=true)]
        public int VatRate { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class InlineProductItemAllOf {\n");
            sb.Append("  DiscountAmountPercentage: ").Append(DiscountAmountPercentage).Append("\n");
            sb.Append("  DiscountAmount: ").Append(DiscountAmount).Append("\n");
            sb.Append("  VatRate: ").Append(VatRate).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InlineProductItemAllOf);
        }

        /// <summary>
        /// Returns true if InlineProductItemAllOf instances are equal
        /// </summary>
        /// <param name="input">Instance of InlineProductItemAllOf to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InlineProductItemAllOf input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.DiscountAmountPercentage == input.DiscountAmountPercentage ||
                    (this.DiscountAmountPercentage != null &&
                    this.DiscountAmountPercentage.Equals(input.DiscountAmountPercentage))
                ) && 
                (
                    this.DiscountAmount == input.DiscountAmount ||
                    (this.DiscountAmount != null &&
                    this.DiscountAmount.Equals(input.DiscountAmount))
                ) && 
                (
                    this.VatRate == input.VatRate ||
                    (this.VatRate != null &&
                    this.VatRate.Equals(input.VatRate))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.DiscountAmountPercentage != null)
                    hashCode = hashCode * 59 + this.DiscountAmountPercentage.GetHashCode();
                if (this.DiscountAmount != null)
                    hashCode = hashCode * 59 + this.DiscountAmount.GetHashCode();
                if (this.VatRate != null)
                    hashCode = hashCode * 59 + this.VatRate.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
